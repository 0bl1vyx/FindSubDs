#!/bin/bash

# Colors
RED='\033[0;31m'
GRN='\033[0;32m'
YLW='\033[1;33m'
CYN='\033[0;36m'
BLU='\033[1;34m'
MAG='\033[1;35m'
WHT='\033[1;37m'
NC='\033[0m' # No Color

# Tool Check
for tool in subfinder assetfinder sublist3r dnsx httpx; do
  if ! command -v "$tool" >/dev/null 2>&1; then
    echo -e "${RED}[✘] Tool missing: ${tool}. Install it first.${NC}"
    exit 1
  fi
done

# Spinner with updates
spinner_with_updates() {
    local pid=$1
    local name=$2
    local spin=('⠋' '⠙' '⠹' '⠸' '⠼' '⠴' '⠦' '⠧' '⠇' '⠏')
    local i=0
    local elapsed=0
    local interval=60
    local messages=("Still working on it..." "Almost there..." "Just a little more patience..." "Finalizing..." "Hang tight...")

    while kill -0 "$pid" 2>/dev/null; do
        i=$(( (i+1) %10 ))
        printf "\r${MAG}${spin[$i]}${NC} Working on ${name}... "
        sleep 1
        elapsed=$((elapsed + 1))
        if (( elapsed % interval == 0 )); then
            msg_index=$(( (elapsed / interval - 1) % ${#messages[@]} ))
            echo -e "\n${YLW}[⏳ ${elapsed}s] ${messages[$msg_index]}${NC}"
        fi
    done
    printf "\r"
}

# Banner
banner() {
  echo -ne "${BLU}"
  for frame in "🔍" "🔎" "🛰️" "🕵️" "📡" "🔍"; do
    printf "\r${WHT}Loading ${frame} FindSubDs...${NC}"
    sleep 0.2
  done
  echo -e "\n${BLU}"
  echo "╔═══════════════════════════════════════════════╗"
  echo "║               🔍 FindSubDs Tool               ║"
  echo "╠═══════════════════════════════════════════════╣"
  echo -e "║     Created with 💻 by ${MAG}Crypt Specter${BLU}             ║"
  echo "╚═══════════════════════════════════════════════╝"
  echo -e "${NC}"
}

# Stage
stage() {
  echo -e "\n${CYN}╔════════════════════════════════════╗"
  echo -e   "║ 🔧 ${WHT}${1}${CYN}"
  echo -e   "╚════════════════════════════════════╝${NC}"
  for i in {1..3}; do
    sleep 0.1 && printf "${MAG}." && sleep 0.1 && printf "${GRN}." && sleep 0.1 && printf "${CYN}.\n${NC}"
  done
}

# Summary
summary() {
  echo -e "\n${GRN}╔═══════════════════════════════════════════════╗"
  echo -e   "║ 🎉 Subdomain enumeration complete!"
  echo -e   "║ 📦 Total subdomains: ${CYN}$1${GRN}"
  echo -e   "║ 🌐 Live subdomains: ${CYN}$2${GRN}"
  echo -e   "║ 💾 Files saved: ${YLW}$3${GRN}, $LIVEOUT"
  echo -e   "╚═══════════════════════════════════════════════╝${NC}\n"
}

# Parse args
while getopts "d:o:l:" opt; do
  case $opt in
    d) DOMAIN=$OPTARG ;;
    o) OUTPUT=$OPTARG ;;
    l) LIVEOUT=$OPTARG ;;
    *) echo -e "${RED}[!] Usage: $0 -d domain.com -o output.txt [-l live_output.txt]${NC}" && exit 1 ;;
  esac
done

if [[ -z "$DOMAIN" || -z "$OUTPUT" ]]; then
  echo -e "${RED}[!] Missing arguments!${NC}"
  echo "Usage: $0 -d domain.com -o output.txt [-l live_output.txt]"
  exit 1
fi

# Default live output
: "${LIVEOUT:=live_subs.txt}"

# Overwrite warning
if [[ -f "$OUTPUT" || -f "$LIVEOUT" ]]; then
  echo -e "${YLW}[!] Output file(s) already exist. Overwrite? [y/N]${NC}"
  read -r confirm
  if [[ "$confirm" != "y" && "$confirm" != "Y" ]]; then
    echo -e "${RED}[✘] Operation aborted by user.${NC}"
    exit 1
  fi
fi

clear
banner
sleep 0.3
echo -e "${YLW}📡 Target domain:${NC} $DOMAIN"
echo -e "${YLW}🗂️  Output file: ${NC} $OUTPUT"
echo -e "${YLW}🌐 Live output : ${NC} $LIVEOUT"
echo -e "${CYN}Initializing modules...${NC}" && sleep 0.5
echo -ne "${MAG}Countdown to launch: " && for i in {3..1}; do printf "${WHT}$i " && sleep 1; done
echo -e "\n${NC}"

# Temp files
SUBF=$(mktemp)
ASSET=$(mktemp)
SUBL=$(mktemp)
RESOLVED=$(mktemp)

# subfinder
stage "Running subfinder..."
(subfinder -d "$DOMAIN" -all -silent -o "$SUBF" > /dev/null 2>&1) &
spinner_with_updates $! "subfinder"
echo -e "${GRN}[✔] subfinder complete!${NC}"

# assetfinder
stage "Running assetfinder..."
(assetfinder --subs-only "$DOMAIN" > "$ASSET" 2>/dev/null) &
spinner_with_updates $! "assetfinder"
echo -e "${GRN}[✔] assetfinder complete!${NC}"

# sublist3r
stage "Running sublist3r..."
(sublist3r -d "$DOMAIN" -o "$SUBL" > /dev/null 2>&1) &
spinner_with_updates $! "sublist3r"
echo -e "${GRN}[✔] sublist3r complete!${NC}"

# merge & dedupe
stage "Merging & deduplicating results..."
(cat "$SUBF" "$ASSET" "$SUBL" | sort -u > "$OUTPUT") &
spinner_with_updates $! "merge"
echo -e "${GRN}[✔] All results merged successfully!${NC}"

# dnsx
stage "Resolving subdomains with dnsx..."
(dnsx -l "$OUTPUT" -silent -o "$RESOLVED" > /dev/null 2>&1) &
spinner_with_updates $! "dnsx"
echo -e "${GRN}[✔] Resolution complete!${NC}"

# httpx
stage "Checking live subdomains with httpx..."
(httpx -l "$RESOLVED" -silent -o "$LIVEOUT" > /dev/null 2>&1) &
spinner_with_updates $! "httpx"
echo -e "${GRN}[✔] Live check complete!${NC}"

# Cleanup
rm -f "$SUBF" "$ASSET" "$SUBL" "$RESOLVED"

# Final summary
total=$(wc -l < "$OUTPUT")
live=$(wc -l < "$LIVEOUT")
summary "$total" "$live" "$OUTPUT"
